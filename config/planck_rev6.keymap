/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using an encoder */
//&encoder {
//    status = "okay";
//};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // |  ESC  |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |  RET  |
            // |       | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | DARW | UARW  |  RARW |

            bindings = <
&mt LEFT_ALT TAB                 &kp Q     &kp W     &kp E     &kp R      &kp T        &kp Y        &kp U         &kp I      &kp O     &kp P      &kp BACKSLASH
&mt LEFT_CONTROL BACKSPACE       &kp A     &kp S     &kp D     &kp F      &kp G        &kp H        &kp J         &kp K      &kp L     &kp SEMI   &kp SQT
&mt LEFT_SHIFT LEFT_PARENTHESIS  &kp Z     &kp X     &kp C     &kp V      &kp B        &kp N        &kp M         &kp COMMA  &kp DOT   &kp SLASH  &mt RIGHT_SHIFT RIGHT_PARENTHESIS
&trans                           &kp LCTL  &kp LALT  &kp LGUI  &lt 4 TAB  &lt 2 SPACE  &lt 1 ENTER  &lt 3 ESCAPE  &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            bindings = <
&kp ESCAPE  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE        &bl BL_TOG     &kp N7        &kp N8        &kp N9        &kp ASTERISK   &kp DEL
&kp DEL     &kp HASH         &kp DOLLAR   &kp EQUAL         &kp MINUS          &kp UNDERSCORE  &kp N0         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS       &kp PIPE
&kp COMMA   &kp PERCENT      &kp CARET    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE       &kp AMPERSAND  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH  &kp PERIOD
&trans      &trans           &trans       &trans            &trans             &trans          &trans         &trans        &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PP
            >;
        };

        raise {
            bindings = <
&kp GRAVE   &kp N1       &kp N2      &kp N3     &kp N4     &kp N5  &trans          &kp N7          &kp N8        &kp N9        &kp N0        &kp BSPC
&kp DEL     &kp LC(F1)   &kp LC(F2)  &kp F3     &kp F4     &kp F5  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT     &trans        &trans
&trans      &kp LC(Z)    &kp LC(X)   &kp LC(C)  &kp LC(V)  &trans  &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END       &trans        &trans
&sys_reset  &bootloader  &trans      &trans     &trans     &trans  &trans          &trans          &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans       &trans            &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LS(TAB)  &kp TAB           &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans       &trans            &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans       &kp LEFT_CONTROL  &kp LEFT_ALT  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
